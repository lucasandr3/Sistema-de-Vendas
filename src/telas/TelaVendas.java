/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import com.formdev.flatlaf.intellijthemes.FlatLightFlatIJTheme;
import controller.ControllerCliente;
import controller.ControllerProdutos;
import controller.ControllerProdutosVendasEstoque;
import controller.ControllerVendas;
import controller.ControllerVendasCliente;
import controller.ControllerVendasPagamento;
import controller.ControllerVendasProdutos;
import dialogos.DvendaManual;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import model.ModelCliente;
import model.ModelProdutos;
import model.ModelProdutosVendasEstoque;
import model.ModelSessaoUsuario;
import model.ModelVendas;
import model.ModelVendasCliente;
import model.ModelVendasPagamento;
import model.ModelVendasProdutos;

/**
 *
 * @author DEV
 */
public class TelaVendas extends javax.swing.JFrame {

    String caminho = "C:/Users/Lucas/Documents/NetBeansProjects/MLV Sistema de Vendas e Gestão/build/classes/imagens/produtos/";

    ModelSessaoUsuario modelSessaoUsuario = new ModelSessaoUsuario();
    private DvendaManual checkout;

    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelCliente = new ArrayList<>();

    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProdutos modelProdutos = new ModelProdutos();
    ArrayList<ModelProdutos> listaModelProdutos = new ArrayList<>();

    ControllerVendasProdutos ctrlVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos vendasProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaVendasProdutos = new ArrayList<>();

    ControllerVendasPagamento ctrlVendaPagamento = new ControllerVendasPagamento();
    ModelVendasPagamento mVendaPagamento = new ModelVendasPagamento();

    ControllerVendas vendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    ArrayList<ModelVendas> listaVendas = new ArrayList<>();

    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    ModelVendasCliente modelVC = new ModelVendasCliente();
    ArrayList<ModelVendasCliente> listaModelVendasCliente = new ArrayList<>();

    ControllerProdutosVendasEstoque controllerProdutosVendasEstoque = new ControllerProdutosVendasEstoque();
    ModelProdutosVendasEstoque modelProdutosVendasEstoque = new ModelProdutosVendasEstoque();
    ArrayList<ModelProdutosVendasEstoque> listaModelProdutosVendasEstoque = new ArrayList<>();

    String alterarSalvar;

    /**
     * Creates new form TelaVendas
     */
    public TelaVendas() {
        initComponents();
        listaClientes();
        listaProdutos();
        carregarVendas();
        habilitaDesabilitaFormulario(false);
        autorizeDesconto(false);
        preencherCodigoClientePeloCombobox();
        preencherCodigoProdutoPeloCombobox();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.checkout = new DvendaManual(this, true);
        configTeclasAtalho();
        setVisualTabela();
        setRowTableAlign(5);
        jTabbedPane1.setEnabledAt(2, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfcodigoCliente = new javax.swing.JTextField();
        jcCliente = new componentes.UJComboBox();
        jLabel3 = new javax.swing.JLabel();
        jtfNumeroVenda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfCodigoProduto = new javax.swing.JTextField();
        jcNomeProduto = new componentes.UJComboBox();
        jtfQuantidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jbadicionar = new javax.swing.JButton();
        jbcancelar = new javax.swing.JButton();
        jbnovo = new javax.swing.JButton();
        jbsalvar = new javax.swing.JButton();
        jtfvalorTotal = new javax.swing.JTextField();
        jtfdesconto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jbremoverprodutos = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jb_desconto = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtprodutosvenda = new javax.swing.JTable();
        panel_foto = new javax.swing.JPanel();
        foto_produto = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jtfpesquisa = new javax.swing.JTextField();
        jbpesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtvendas = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel13 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        label_desconto = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        label_observacao = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        label_vendedor = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        label_parceiro = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        label_telefone = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        label_dtnascimento = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabela_produtos_vendidos = new javax.swing.JTable();
        jbalterar = new javax.swing.JButton();
        jbexcluir = new javax.swing.JButton();
        label_codigo_venda = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vendas");
        setFont(new java.awt.Font("JetBrains Mono", 0, 10)); // NOI18N

        jTabbedPane1.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N

        jLabel2.setText("Código do Cliente:");

        jtfcodigoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfcodigoClienteFocusLost(evt);
            }
        });

        jcCliente.setAutocompletar(true);
        jcCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel3.setText("Nome do Cliente:");

        jtfNumeroVenda.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setText("Número da Venda");

        jLabel4.setText("Cód. Produto:");

        jtfCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoProdutoFocusLost(evt);
            }
        });

        jcNomeProduto.setAutocompletar(true);
        jcNomeProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcNomeProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel5.setText("Quantidade:");

        jbadicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buttons/check.png"))); // NOI18N
        jbadicionar.setText("Adicionar");
        jbadicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbadicionarActionPerformed(evt);
            }
        });

        jbcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buttons/cancel.png"))); // NOI18N
        jbcancelar.setText("Cancelar");
        jbcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbcancelarActionPerformed(evt);
            }
        });

        jbnovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buttons/plus.png"))); // NOI18N
        jbnovo.setText("Nova Venda");
        jbnovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbnovoActionPerformed(evt);
            }
        });

        jbsalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buttons/check.png"))); // NOI18N
        jbsalvar.setText("Finalizar");
        jbsalvar.setEnabled(false);
        jbsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsalvarActionPerformed(evt);
            }
        });

        jtfdesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfdescontoFocusLost(evt);
            }
        });

        jLabel6.setText("Desconto:");

        jLabel7.setText("Valor Total:");

        jbremoverprodutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buttons/delete.png"))); // NOI18N
        jbremoverprodutos.setText("Remover Produto");
        jbremoverprodutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbremoverprodutosActionPerformed(evt);
            }
        });

        jLabel9.setText("Nome do Produto:");

        jb_desconto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buttons/exchange.png"))); // NOI18N
        jb_desconto.setText("Autorizar Desconto");
        jb_desconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_descontoActionPerformed(evt);
            }
        });

        jtprodutosvenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Prod", "Nome Produto", "Quant", "Valor Ún.", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtprodutosvenda.setGridColor(new java.awt.Color(102, 102, 102));
        jtprodutosvenda.setRowHeight(25);
        jtprodutosvenda.setShowGrid(true);
        jScrollPane1.setViewportView(jtprodutosvenda);
        if (jtprodutosvenda.getColumnModel().getColumnCount() > 0) {
            jtprodutosvenda.getColumnModel().getColumn(0).setMinWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(0).setPreferredWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(0).setMaxWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(2).setMinWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(2).setPreferredWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(2).setMaxWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(3).setMinWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(3).setPreferredWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(3).setMaxWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(4).setMinWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(4).setPreferredWidth(130);
            jtprodutosvenda.getColumnModel().getColumn(4).setMaxWidth(130);
        }

        panel_foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout panel_fotoLayout = new javax.swing.GroupLayout(panel_foto);
        panel_foto.setLayout(panel_fotoLayout);
        panel_fotoLayout.setHorizontalGroup(
            panel_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_fotoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(foto_produto, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_fotoLayout.setVerticalGroup(
            panel_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_fotoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(foto_produto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_foto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                    .addComponent(panel_foto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("F6 Desconto");

        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("F5 Cancelar");

        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("F4 Checkout");

        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("F3 Remover Produto");

        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("F2 Nova Venda ");

        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("F9 Finalizar Venda");

        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("ESC Fecha Tela");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(jtfcodigoCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jcNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5)))))
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jbadicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(jtfNumeroVenda, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jbcancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbnovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbremoverprodutos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jtfdesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jb_desconto, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(jtfvalorTotal)
                            .addComponent(jbsalvar, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))))
                .addContainerGap())
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtfNumeroVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jtfcodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbadicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfvalorTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfdesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbnovo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbsalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbremoverprodutos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_desconto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 884, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 651, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Nova Venda", jPanel1);

        jLabel8.setText("Pesquisa:");

        jbpesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buttons/search.png"))); // NOI18N
        jbpesquisar.setText("Pesquisar");

        jtvendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código da Venda", "Cliente", "Data", "Total da Venda", "Editada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtvendas.setFocusable(false);
        jtvendas.setGridColor(new java.awt.Color(102, 102, 102));
        jtvendas.setRowHeight(25);
        jtvendas.setShowGrid(true);
        jtvendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtvendasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtvendas);
        if (jtvendas.getColumnModel().getColumnCount() > 0) {
            jtvendas.getColumnModel().getColumn(0).setMinWidth(130);
            jtvendas.getColumnModel().getColumn(0).setPreferredWidth(130);
            jtvendas.getColumnModel().getColumn(0).setMaxWidth(130);
            jtvendas.getColumnModel().getColumn(2).setMinWidth(130);
            jtvendas.getColumnModel().getColumn(2).setPreferredWidth(130);
            jtvendas.getColumnModel().getColumn(2).setMaxWidth(130);
            jtvendas.getColumnModel().getColumn(3).setMinWidth(130);
            jtvendas.getColumnModel().getColumn(3).setPreferredWidth(130);
            jtvendas.getColumnModel().getColumn(3).setMaxWidth(130);
            jtvendas.getColumnModel().getColumn(4).setMinWidth(130);
            jtvendas.getColumnModel().getColumn(4).setPreferredWidth(130);
            jtvendas.getColumnModel().getColumn(4).setMaxWidth(130);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jtfpesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbpesquisar))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbpesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consultar Vendas", jPanel2);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da Venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 51, 51));
        jLabel22.setText("Desconto:");

        label_desconto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        label_desconto.setForeground(new java.awt.Color(102, 102, 102));
        label_desconto.setText("--");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("Observação:");

        label_observacao.setForeground(new java.awt.Color(102, 102, 102));
        label_observacao.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_observacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(label_desconto)
                            .addComponent(jLabel24))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_desconto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_observacao, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Vendedor:");

        label_vendedor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        label_vendedor.setForeground(new java.awt.Color(102, 102, 102));
        label_vendedor.setText("--");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setText("Parceiro (Indicação):");

        label_parceiro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        label_parceiro.setForeground(new java.awt.Color(102, 102, 102));
        label_parceiro.setText("--");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(label_vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_parceiro)
                    .addComponent(jLabel20))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_vendedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addGap(0, 0, 0)
                .addComponent(label_parceiro)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("Telefone Cliente:");

        label_telefone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        label_telefone.setForeground(new java.awt.Color(102, 102, 102));
        label_telefone.setText("--");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 51, 51));
        jLabel28.setText("Data de Nascimento Cliente:");

        label_dtnascimento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        label_dtnascimento.setForeground(new java.awt.Color(102, 102, 102));
        label_dtnascimento.setText("--");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel26)
                    .addComponent(label_telefone)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_dtnascimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_telefone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label_dtnascimento)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator3)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Produtos da Venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        tabela_produtos_vendidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Produto", "Nome", "Quantidade", "Valor Únit.", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_produtos_vendidos.setFocusable(false);
        tabela_produtos_vendidos.setShowGrid(true);
        jScrollPane3.setViewportView(tabela_produtos_vendidos);
        if (tabela_produtos_vendidos.getColumnModel().getColumnCount() > 0) {
            tabela_produtos_vendidos.getColumnModel().getColumn(0).setMinWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(0).setPreferredWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(0).setMaxWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(2).setMinWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(2).setPreferredWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(2).setMaxWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(3).setMinWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(3).setPreferredWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(3).setMaxWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(4).setMinWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(4).setPreferredWidth(130);
            tabela_produtos_vendidos.getColumnModel().getColumn(4).setMaxWidth(130);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE))
        );

        jbalterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buttons/refresh.png"))); // NOI18N
        jbalterar.setText("Alterar");
        jbalterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbalterarActionPerformed(evt);
            }
        });

        jbexcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/buttons/delete.png"))); // NOI18N
        jbexcluir.setText("Excluir Venda");
        jbexcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbexcluirActionPerformed(evt);
            }
        });

        label_codigo_venda.setForeground(new java.awt.Color(51, 51, 51));
        label_codigo_venda.setText("--");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Código da Venda:");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jbexcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbalterar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_codigo_venda)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbexcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbalterar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_codigo_venda)
                    .addComponent(jLabel17))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dados da Venda", jPanel11);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("empty-statement")
    private void jtfcodigoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfcodigoClienteFocusLost
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(jtfcodigoCliente.getText()));
        this.jcCliente.setSelectedItem(modelCliente.getName().toUpperCase());
    }//GEN-LAST:event_jtfcodigoClienteFocusLost

    private void jtfCodigoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoFocusLost
        modelProdutos = controllerProdutos.getProdutosController(jtfCodigoProduto.getText());
        this.jcNomeProduto.setSelectedItem(modelProdutos.getNome_prod().toUpperCase());
    }//GEN-LAST:event_jtfCodigoProdutoFocusLost

    private void jcNomeProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcNomeProdutoPopupMenuWillBecomeInvisible
        if (jcNomeProduto.isVisible()) {
            this.preencherCodigoProdutoPeloCombobox();
        }
    }//GEN-LAST:event_jcNomeProdutoPopupMenuWillBecomeInvisible

    private void jbadicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbadicionarActionPerformed
        if (jtfQuantidade.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Você precisa informar a quantidade.", "Aviso", JOptionPane.ERROR_MESSAGE);
        } else {

            modelProdutos = controllerProdutos.getProdutosController(jtfCodigoProduto.getText());
            DefaultTableModel modelo = (DefaultTableModel) jtprodutosvenda.getModel();
            int count = 0;
            double quantidade = 0;
            quantidade = Double.parseDouble(jtfQuantidade.getText());
            for (int i = 0; i < count; i++) {
                modelo.setNumRows(0);
            }
            modelo.addRow(new Object[]{
                modelProdutos.getIdProd(),
                modelProdutos.getNome_prod().toUpperCase(),
                jtfQuantidade.getText(),
                modelProdutos.getPreco(),
                modelProdutos.getPreco() * quantidade,});
            somarTotalProdutos();

            if (modelProdutos.getImagem().equals("default.png")) {

                ImageIcon imageIcon = new ImageIcon(new ImageIcon(caminho + "default.png").
                        getImage().getScaledInstance(230, 230, Image.SCALE_DEFAULT)
                );
                foto_produto.setIcon(imageIcon);

            } else {

                ImageIcon imageIcon = new ImageIcon(new ImageIcon(caminho + modelProdutos.getImagem()).
                        getImage().getScaledInstance(230, 230, Image.SCALE_DEFAULT)
                );
                foto_produto.setIcon(imageIcon);
            }
        }
    }//GEN-LAST:event_jbadicionarActionPerformed

    private void jbcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbcancelarActionPerformed
        limparFormulario();
        habilitaDesabilitaFormulario(false);
    }//GEN-LAST:event_jbcancelarActionPerformed

    private void jbnovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbnovoActionPerformed
        alterarSalvar = "salvar";
        limparFormulario();
        habilitaDesabilitaFormulario(true);
        jtfQuantidade.setText("1");
    }//GEN-LAST:event_jbnovoActionPerformed

    private void jbsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsalvarActionPerformed

        float sub;

        if (jtfdesconto.getText().equals("")) {
            sub = (float) (Float.parseFloat(jtfvalorTotal.getText()) + 0.00);
        } else {
            sub = Float.parseFloat(jtfvalorTotal.getText()) + Float.parseFloat(jtfdesconto.getText());
        }

        checkout.setcSbutotal(String.valueOf(sub));
        checkout.setcDesconto(jtfdesconto.getText());
        checkout.setcTotal(jtfvalorTotal.getText());
        checkout.setcTotalPagar(jtfvalorTotal.getText());
        checkout.setCheckoutValores();
        checkout.setVisible(true);
//        finalizarVenda();
        if (checkout.isFinalizarCancelar()) {
            this.finalizarVenda();
        } else {
            this.jtfdesconto.setText("0,00");
        }
        this.jbsalvar.setEnabled(false);
    }//GEN-LAST:event_jbsalvarActionPerformed

    private void jtfdescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfdescontoFocusLost
        somarTotalProdutos();
    }//GEN-LAST:event_jtfdescontoFocusLost

    private void jbremoverprodutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbremoverprodutosActionPerformed
        int linha = this.jtprodutosvenda.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) this.jtprodutosvenda.getModel();
        modelo.removeRow(linha);
        this.somarTotalProdutos();
    }//GEN-LAST:event_jbremoverprodutosActionPerformed

    private void jcClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcClientePopupMenuWillBecomeInvisible
        if (jcCliente.isPopupVisible()) {
            this.preencherCodigoClientePeloCombobox();
        }
    }//GEN-LAST:event_jcClientePopupMenuWillBecomeInvisible

    private void jb_descontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_descontoActionPerformed
        veririficaSenhaDesconto();
    }//GEN-LAST:event_jb_descontoActionPerformed

    private void jtvendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtvendasMouseClicked
        int linha = this.jtvendas.getSelectedRow();
        int codigoVenda;
        codigoVenda = (int) jtvendas.getValueAt(linha, 0);
        String obs;
        String parceiro;
        modelVC = controllerVendasCliente.getVendaCliente(codigoVenda);
        label_vendedor.setText(String.valueOf(modelVC.getModelVenda().getIdVendedor()));
        if (modelVC.getModelVenda().getIdParceiro() == 0) {
            parceiro = "Sem Indicação";
        } else {
            parceiro = String.valueOf(modelVC.getModelVenda().getIdParceiro());
        }
        label_parceiro.setText(parceiro);
        label_desconto.setText(String.valueOf("R$ " + modelVC.getModelVenda().getDesconto()));
        if (modelVC.getModelVenda().getObservacao().equals("null")) {
            obs = "Sem Observação";
        } else {
            obs = modelVC.getModelVenda().getObservacao();
        }
        label_observacao.setText(obs);
        label_telefone.setText(modelVC.getModelCliente().getPhone());
        label_dtnascimento.setText(modelVC.getModelCliente().getBirthdate());

        listaModelProdutosVendasEstoque = controllerProdutosVendasEstoque.getListaProdutosVendasEstoqueController(codigoVenda);
        DefaultTableModel modelo = (DefaultTableModel) this.tabela_produtos_vendidos.getModel();
        modelo.setNumRows(0);
        // insere os produtos na tabela
        int count = listaModelProdutosVendasEstoque.size();

        for (int i = 0; i < count; i++) {
            this.label_codigo_venda.setText(String.valueOf(listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getIdVenda()));
            modelo.addRow(new Object[]{
                listaModelProdutosVendasEstoque.get(i).getModelProdutos().getIdProd(),
                listaModelProdutosVendasEstoque.get(i).getModelProdutos().getNome_prod().toUpperCase(),
                listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getQuantidade(),
                listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getValorVendido(),
                listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getValorVendido() * listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getQuantidade(),});
        }
        this.somarTotalProdutos();

        jTabbedPane1.setTitleAt(2, "Dados da Venda - #" + codigoVenda);
        jTabbedPane1.setEnabledAt(2, true);
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jtvendasMouseClicked

    private void jbalterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbalterarActionPerformed
        this.jbsalvar.setEnabled(true);
        alterarSalvar = "alterar";
        int codigoVenda;
        codigoVenda = Integer.parseInt(this.label_codigo_venda.getText());
        listaModelProdutosVendasEstoque = controllerProdutosVendasEstoque.getListaProdutosVendasEstoqueController(codigoVenda);
        DefaultTableModel modelo = (DefaultTableModel) this.jtprodutosvenda.getModel();
        modelo.setNumRows(0);
        // insere os produtos na tabela
        int count = listaModelProdutosVendasEstoque.size();
        for (int i = 0; i < count; i++) {
            this.jtfNumeroVenda.setText(String.valueOf(listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getIdVenda()));
            modelo.addRow(new Object[]{
                listaModelProdutosVendasEstoque.get(i).getModelProdutos().getIdProd(),
                listaModelProdutosVendasEstoque.get(i).getModelProdutos().getNome_prod().toUpperCase(),
                listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getQuantidade(),
                listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getValorVendido(),
                listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getValorVendido() * listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getQuantidade(),});
        }
        this.somarTotalProdutos();
        this.habilitaDesabilitaFormulario(true);
        this.jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jbalterarActionPerformed

    private void jbexcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbexcluirActionPerformed
        veririficaSenhaCancelarVenda();
    }//GEN-LAST:event_jbexcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        FlatLightFlatIJTheme.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel foto_produto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jb_desconto;
    private javax.swing.JButton jbadicionar;
    private javax.swing.JButton jbalterar;
    private javax.swing.JButton jbcancelar;
    private javax.swing.JButton jbexcluir;
    private javax.swing.JButton jbnovo;
    private javax.swing.JButton jbpesquisar;
    private javax.swing.JButton jbremoverprodutos;
    private javax.swing.JButton jbsalvar;
    private componentes.UJComboBox jcCliente;
    private componentes.UJComboBox jcNomeProduto;
    private javax.swing.JTextField jtfCodigoProduto;
    private javax.swing.JTextField jtfNumeroVenda;
    private javax.swing.JTextField jtfQuantidade;
    private javax.swing.JTextField jtfcodigoCliente;
    private javax.swing.JTextField jtfdesconto;
    private javax.swing.JTextField jtfpesquisa;
    private javax.swing.JTextField jtfvalorTotal;
    private javax.swing.JTable jtprodutosvenda;
    private javax.swing.JTable jtvendas;
    private javax.swing.JLabel label_codigo_venda;
    private javax.swing.JLabel label_desconto;
    private javax.swing.JLabel label_dtnascimento;
    private javax.swing.JLabel label_observacao;
    private javax.swing.JLabel label_parceiro;
    private javax.swing.JLabel label_telefone;
    private javax.swing.JLabel label_vendedor;
    private javax.swing.JPanel panel_foto;
    private javax.swing.JTable tabela_produtos_vendidos;
    // End of variables declaration//GEN-END:variables

    /**
     * desabilita e habilita formulario
     *
     * @param b
     */
    private void habilitaDesabilitaFormulario(boolean b) {
        this.jtfQuantidade.setEnabled(b);
        this.jtfvalorTotal.setEnabled(b);
        this.jtfcodigoCliente.setEnabled(b);
        this.jtfCodigoProduto.setEnabled(b);
        this.jcCliente.setEnabled(b);
        this.jcNomeProduto.setEnabled(b);
        this.jbadicionar.setEnabled(b);
        this.jbsalvar.setEnabled(b);
    }

    /**
     * metodo para limpar formulario
     */
    private void limparFormulario() {
        this.jtfQuantidade.setText("");
        this.jtfdesconto.setText("");
        this.jtfvalorTotal.setText("");

        DefaultTableModel modelo = (DefaultTableModel) jtprodutosvenda.getModel();
        modelo.setNumRows(0);
    }

    /**
     * Preenche o combobox com os clientes
     */
    private void listaClientes() {

        listaModelCliente = controllerCliente.getListaClienteController();
        jcCliente.removeAllItems();

        for (int i = 0; i < listaModelCliente.size(); i++) {
            jcCliente.addItem(listaModelCliente.get(i).getName().toUpperCase());
        }
    }

    /**
     * Carrega todas as vendas
     */
    private void carregarVendas() {
        listaModelVendasCliente = controllerVendasCliente.getListaVendasClienteController();
        DefaultTableModel modelo = (DefaultTableModel) jtvendas.getModel();
        modelo.setNumRows(0);
        String status;
        // insere os produtos na tabela
        int count = listaModelVendasCliente.size();
        for (int i = 0; i < count; i++) {

            if (listaModelVendasCliente.get(i).getModelVenda().getEditada() == 0) {
                status = "Não Editada";
            } else {
                status = "Editada";
            }

            modelo.addRow(new Object[]{
                listaModelVendasCliente.get(i).getModelVenda().getIdVenda(),
                listaModelVendasCliente.get(i).getModelCliente().getName(),
                listaModelVendasCliente.get(i).getModelVenda().getDataVenda(),
                "R$ " + listaModelVendasCliente.get(i).getModelVenda().getTotal_taxa(),
                status
            });
        }
    }

    /**
     * Preenche o combobox com os produtos
     */
    private void listaProdutos() {

        listaModelProdutos = controllerProdutos.getListaProdutosController();
        jcNomeProduto.removeAllItems();

        for (int i = 0; i < listaModelProdutos.size(); i++) {
            jcNomeProduto.addItem(listaModelProdutos.get(i).getNome_prod().toUpperCase());
        }
    }

    /**
     * preenche codigo Cliente
     */
    private void preencherCodigoClientePeloCombobox() {
        modelCliente = controllerCliente.getClienteControllerNome(jcCliente.getSelectedItem().toString());
        this.jtfcodigoCliente.setText(String.valueOf(modelCliente.getIdCliente()));
    }

    /**
     * preenche codigo produto
     */
    private void preencherCodigoProdutoPeloCombobox() {
        modelProdutos = controllerProdutos.retornaProdutoControllerNome(jcNomeProduto.getSelectedItem().toString());
        this.jtfCodigoProduto.setText(String.valueOf(modelProdutos.getNovo_cod()));
    }

    /**
     * aplica desconto ao valor final de venda
     */
    private void aplicarDesconto() {
        try {
            jtfvalorTotal.setText(String.valueOf(
                    Double.parseDouble(jtfvalorTotal.getText()) - Double.parseDouble(jtfdesconto.getText())));
        } catch (NumberFormatException e) {

        }
    }

    /**
     * soma os valores total dos produtos
     */
    private void somarTotalProdutos() {
        double soma = 0, valor;
        int count = jtprodutosvenda.getRowCount();

        for (int i = 0; i < count; i++) {
            valor = (double) jtprodutosvenda.getValueAt(i, 4);
            soma = soma + valor;
        }

        jtfvalorTotal.setText(String.valueOf(soma));
        aplicarDesconto();
    }

    private void autorizeDesconto(boolean b) {
        jtfdesconto.setEnabled(b);
    }

    private void veririficaSenhaDesconto() {
        String codigoDesconto = JOptionPane.showInputDialog(this, "Digite sua senha para dar desconto");

        try {
            if (codigoDesconto.equals(modelSessaoUsuario.senhaDesconto)) {
                autorizeDesconto(true);
                //return true;
            } else {
                veririficaSenhaDesconto();
                //return false;
            }
        } catch (Exception e) {
        }
    }

    private void veririficaSenhaCancelarVenda() {
        String codigoCancelarVenda = JOptionPane.showInputDialog(this, "Digite sua senha para cancelar venda");

        try {
            if (codigoCancelarVenda.equals(modelSessaoUsuario.senhaCancelarVenda)) {
                cancelarVenda();
                //return true;
            } else {
                veririficaSenhaCancelarVenda();
                //return false;
            }
        } catch (Exception e) {
        }
    }

    private void configTeclasAtalho() {
        rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "ESCAPE");
        rootPane.getRootPane().getActionMap().put("ESCAPE", new AbstractAction("ESCAPE") {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Realiza alguma ação ao ser pressionado o ESC
                dispose();
            }
        });

        rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), "F2");
        rootPane.getRootPane().getActionMap().put("F2", new AbstractAction("F2") {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Realiza alguma ação ao ser pressionado o F1
                alterarSalvar = "salvar";
                limparFormulario();
                habilitaDesabilitaFormulario(true);
                jtfQuantidade.setText("1");
            }
        });

        rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0), "F3");
        rootPane.getRootPane().getActionMap().put("F3", new AbstractAction("F3") {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Realiza alguma ação ao ser pressionado o F1
                int linha = jtprodutosvenda.getSelectedRow();
                DefaultTableModel modelo = (DefaultTableModel) jtprodutosvenda.getModel();
                modelo.removeRow(linha);
                somarTotalProdutos();
            }
        });

        rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), "F4");
        rootPane.getRootPane().getActionMap().put("F4", new AbstractAction("F4") {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Realiza alguma ação ao ser pressionado o F1
                float sub;

                if (jtfdesconto.getText().equals("")) {
                    sub = (float) (Float.parseFloat(jtfvalorTotal.getText()) + 0.00);
                } else {
                    sub = Float.parseFloat(jtfvalorTotal.getText()) + Float.parseFloat(jtfdesconto.getText());
                }

                checkout.setcSbutotal(String.valueOf(sub));
                checkout.setcDesconto(jtfdesconto.getText());
                checkout.setcTotal(jtfvalorTotal.getText());
                checkout.setcTotalPagar(jtfvalorTotal.getText());
                checkout.setCheckoutValores();
                checkout.setVisible(true);
            }
        });

        rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), "F5");
        rootPane.getRootPane().getActionMap().put("F5", new AbstractAction("F5") {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Realiza alguma ação ao ser pressionado o F1
                limparFormulario();
                habilitaDesabilitaFormulario(false);
            }
        });

        rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F6, 0), "F6");
        rootPane.getRootPane().getActionMap().put("F6", new AbstractAction("F6") {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Realiza alguma ação ao ser pressionado o F1
                veririficaSenhaDesconto();
            }
        });

        rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F9, 0), "F9");
        rootPane.getRootPane().getActionMap().put("F9", new AbstractAction("F9") {
            @Override
            public void actionPerformed(ActionEvent e) {
                //Realiza alguma ação ao ser pressionado o F1
                JOptionPane.showMessageDialog(rootPane, "finalizar Venda");
            }
        });
    }

    public void finalizarVenda() {

//        habilitaDesabilitaFormulario(true);
//        limparFormulario();
        int codigoVenda = 0, codigoProduto = 0;
        float desconto = 0;

        listaVendasProdutos = new ArrayList<>();

        if (jtfdesconto.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = Float.parseFloat(checkout.getcDesconto());
        }

        if (!jtfNumeroVenda.getText().equals("")) {
            modelVendas.setIdVenda(Integer.parseInt(this.jtfNumeroVenda.getText()));
        }

        modelVendas.setIdVendedor(modelSessaoUsuario.nome);
        modelVendas.setIdParceiro(0);
        modelVendas.setIdCliente(Integer.parseInt(this.jtfcodigoCliente.getText()));
        try {
            modelVendas.setDataVenda("10/07/2021");
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        modelVendas.setTotal(Float.parseFloat(checkout.getcTotal()) + desconto);
        modelVendas.setTotal_taxa(Float.parseFloat(checkout.getcTotalPagar()));
        modelVendas.setDesconto(desconto);
        modelVendas.setEditada(0);
        modelVendas.setStatusVenda(0);
        if (alterarSalvar.equals("salvar")) {
            // salvar venda
            codigoVenda = vendas.salvarVendasController(modelVendas);

//            if (codigoVenda > 0) {
//                JOptionPane.showMessageDialog(this, "Venda Lançada com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
//            } else {
//                JOptionPane.showMessageDialog(this, "Erro ao lançar Venda.", "Erro", JOptionPane.ERROR_MESSAGE);
//            }

            // insere forma de pagamento
            checkout.salvaPagamentoVenda(codigoVenda);

            int count = jtprodutosvenda.getRowCount();
            for (int i = 0; i < count; i++) {

                codigoProduto = (int) this.jtprodutosvenda.getValueAt(i, 0);

                vendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();

                vendasProdutos.setIdProduto(codigoProduto);
                vendasProdutos.setIdVenda(codigoVenda);
                vendasProdutos.setValor(Float.parseFloat(String.valueOf(this.jtprodutosvenda.getValueAt(i, 3))));
                vendasProdutos.setValorVendido(Float.parseFloat(String.valueOf(this.jtprodutosvenda.getValueAt(i, 3))));
                vendasProdutos.setQuantidade(Integer.parseInt(String.valueOf(this.jtprodutosvenda.getValueAt(i, 2))));
                // tira o produto do estoque
                modelProdutos.setIdProd(codigoProduto);
                modelProdutos.setQuantidade(controllerProdutos.getProdutosController(String.valueOf(codigoProduto)).getQuantidade()
                        - Integer.parseInt(this.jtprodutosvenda.getValueAt(i, 2).toString()));

                listaVendasProdutos.add(vendasProdutos);
                listaModelProdutos.add(modelProdutos);
            }

            // salva os produtos da venda
            if (ctrlVendasProdutos.salvarVendasProdutosController(listaVendasProdutos)) {
                // salva  a alteraçao de estoque
                //controllerProdutos.atualizarProdutosController(listaModelProdutos);

                JOptionPane.showMessageDialog(this, "Venda lançada com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                this.carregarVendas();
                habilitaDesabilitaFormulario(true);
                this.limparFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao lançar Venda.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            //inicio voltar produtos para estoque
            int linha = jtvendas.getSelectedRow();
            codigoVenda = (int) jtvendas.getValueAt(linha, 0);

            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasEstoque = controllerProdutosVendasEstoque.getListaProdutosVendasEstoqueController(codigoVenda);

            for (int i = 0; i < listaModelProdutosVendasEstoque.size(); i++) {
                modelProdutos = new ModelProdutos();

                modelProdutos.setIdProd(listaModelProdutosVendasEstoque.get(i).getModelProdutos().getIdProd());
                modelProdutos.setQuantidade(
                    listaModelProdutosVendasEstoque.get(i).getModelProdutos().getQuantidade()
                    + listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getQuantidade()
                );

                listaModelProdutos.add(modelProdutos);
            }

            if (controllerProdutos.atualizarProdutosController(listaModelProdutos)) {
                if (ctrlVendasProdutos.excluirVendasProdutosController(codigoVenda)) {
                    //JOptionPane.showMessageDialog(this, "Venda Excluido com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    this.carregarVendas();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao Excluir Venda.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Excluir Venda.", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            // fim do metodo

//            if(controllerVenda.atualizarVendaController(modelVenda)) {
//                JOptionPane.showMessageDialog(this, "Venda alterada com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
//            } else {
//                JOptionPane.showMessageDialog(this, "Erro ao alterar Venda.", "Erro", JOptionPane.ERROR_MESSAGE);
//            }
//
//            // adicionar produtos na lista para salvar
//            int count = jtprodutosvenda.getRowCount();
//            for (int i = 0; i < count; i++) {
//
//                codigoProduto = (int) this.jtprodutosvenda.getValueAt(i, 0);
//
//                modelProdutosVenda = new ModelProdutosVenda();
//                modelProdutos = new ModelProdutos();
//
//                modelProdutosVenda.setProduto(codigoProduto);
//                modelProdutosVenda.setVenda(codigoVenda);
//                modelProdutosVenda.setValorProduto((double) this.jtprodutosvenda.getValueAt(i, 3));
//                modelProdutosVenda.setQuantidadeProduto(Integer.parseInt(this.jtprodutosvenda.getValueAt(i, 2).toString()));
//                // tira o produto do estoque
//                modelProdutos.setIdProduto(codigoProduto);
//                modelProdutos.setProEstoque(controllerProdutos.retornaProdutoController(codigoProduto).getProEstoque()
//                    - Integer.parseInt(this.jtprodutosvenda.getValueAt(i, 2).toString()));
//
//                listaModelProdutosVenda.add(modelProdutosVenda);
//                listaModelProdutos.add(modelProdutos);
//            }
//
//            // salvar os produtos da venda
//            if(controllerProdutosVenda.salvarProdutosVendaController(listaModelProdutosVenda)) {
//                //JOptionPane.showMessageDialog(this, "Produtos da venda salvos com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
//                this.carregarVendas();
//                this.limparFormulario();
//            } else{
//                JOptionPane.showMessageDialog(this, "Erro ao salvar produtos Venda.", "Erro", JOptionPane.ERROR_MESSAGE);
//            }
        }
    }

    private void setVisualTabela() {
        // configuração do header da tabela
        jtprodutosvenda.getTableHeader().setBackground(new Color(100, 100, 100));
        jtprodutosvenda.getTableHeader().setForeground(Color.white);

        // tabela categorias
        jtvendas.getTableHeader().setBackground(new Color(100, 100, 100));
        jtvendas.getTableHeader().setForeground(Color.white);

        // tabela produtos vendidos
        tabela_produtos_vendidos.getTableHeader().setBackground(new Color(100, 100, 100));
        tabela_produtos_vendidos.getTableHeader().setForeground(Color.white);

//        tabela_produtosInativos.getTableHeader().setBackground(new Color(100,100,100));
//        tabela_produtosInativos.getTableHeader().setForeground(Color.white);
        JTableHeader header = (JTableHeader) jtprodutosvenda.getTableHeader();
        DefaultTableCellRenderer centralizado = (DefaultTableCellRenderer) header.getDefaultRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.LEFT);

        JTableHeader headerCat = (JTableHeader) jtvendas.getTableHeader();
        DefaultTableCellRenderer centralizadoCat = (DefaultTableCellRenderer) headerCat.getDefaultRenderer();
        centralizadoCat.setHorizontalAlignment(SwingConstants.LEFT);

        JTableHeader headerPV = (JTableHeader) tabela_produtos_vendidos.getTableHeader();
        DefaultTableCellRenderer centralizadoPV = (DefaultTableCellRenderer) headerPV.getDefaultRenderer();
        centralizadoPV.setHorizontalAlignment(SwingConstants.LEFT);

    }

    private void setRowTableAlign(int size) {
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.LEFT);

        for (int i = 0; i < size; i++) {
            jtprodutosvenda.getColumnModel().getColumn(i).setCellRenderer(centralizado);
            jtvendas.getColumnModel().getColumn(i).setCellRenderer(centralizado);
        }
    }

    private void cancelarVenda() {
        
        String[] options = new String[2];
        options[0] = new String("Sim");
        options[1] = new String("Não");

        int response = JOptionPane.showOptionDialog(
            rootPane, 
            "Deseja realmente excluir a venda ?", 
            "Excluir Venda", 
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null, options, null
        );

        if (response == 0) {

            int codigoVenda = Integer.parseInt(label_codigo_venda.getText());

            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasEstoque = controllerProdutosVendasEstoque.getListaProdutosVendasEstoqueController(codigoVenda);

            for (int i = 0; i < listaModelProdutosVendasEstoque.size(); i++) {
                modelProdutos = new ModelProdutos();

                modelProdutos.setIdProd(listaModelProdutosVendasEstoque.get(i).getModelProdutos().getIdProd());
                modelProdutos.setQuantidade(
                        listaModelProdutosVendasEstoque.get(i).getModelProdutos().getQuantidade()
                        + listaModelProdutosVendasEstoque.get(i).getModelProdutosVenda().getQuantidade()
                );

                listaModelProdutos.add(modelProdutos);
            }

            if (controllerProdutos.atualizarProdutosController(listaModelProdutos)) {

                ctrlVendasProdutos.excluirVendasProdutosController(codigoVenda);

                if (vendas.excluirVendasController(codigoVenda)) {
                    JOptionPane.showMessageDialog(this, "Venda Excluido com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    this.carregarVendas();
                    jTabbedPane1.setSelectedIndex(1);
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao Excluir Venda.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Excluir Venda.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }

    }
}
